<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="team.project.mapper.productMapper">

    <select id="ProductListAll" resultType="ProductVO">
    	SELECT *
    	FROM product
    	WHERE del_YN = 'N' 
    	    	
    </select>
    
    <select id="ProductFilter" resultType="ProductVO" parameterType="list">
    	SELECT *
    	FROM product
    	WHERE del_YN = 'N' 
    		
    	<if test="list != null">
    		and middleSort in (<foreach collection="list" item="filter" separator=",">#{filter.middleSort}</foreach>) 
    		and brand in (<foreach collection="list" item="filter" separator=",">#{filter.brand}</foreach>) 
	    	<foreach collection="list" item="filter" separator="">
		    	<if test="#{filter.price != null and filter.price.equals('0')}">
		    		ORDER BY origin_price DESC
		    	</if>
		    	<if test="#{filter.price != null and filter.price.equals('1')}">
		    		ORDER BY origin_price ASC
		    	</if>
	    	
	    	</foreach>
    	</if>
    	    	
    </select>

    <select id="view" resultType="ProductVO">
    	SELECT product_name,
    		   bigSort,
    		   middleSort,
    		   origin_price,
    		   sale_price,
    		   brand,
    		   inventory,
    		   quantity,
    		   delivery_free_YN,
    		   thumbnail_image,
    		   detail_image
    	FROM product
    	WHERE del_YN != 'y' and product_index = #{index}
    </select>
    
    <select id="cookiList" resultType="ProductVO" parameterType="list">
    	SELECT *
    	FROM product
    	WHERE product_index in (<foreach collection="list" item='test' separator=','>#{test}</foreach>) 
    	ORDER BY FIELD(product_index,<foreach collection="list" item='test' separator=','>#{test}</foreach>)
    </select>
    
    <select id="noMemberCart" resultType="ProductVO" parameterType="list">
    	SELECT *
    	FROM product
    	WHERE product_index in (<foreach collection="list" item='test' separator=','>#{test}</foreach>) 
    </select>
    
    <select id="popularList" resultType="ProductVO">
    	SELECT *
    	FROM product
    	WHERE del_YN = 'N' and quantity > 500
    </select>
    
    <!--  ****************구매 페이지 관련*************************** -->
    
    <!-- 회원&비회원 결제하려는 상품 수량 확인 -->
    <select id="checkInventory" resultType="int" parameterType="String">
    	SELECT COALESCE(inventory, 0)
    	FROM product
    	WHERE product_index = #{product_index}
    	AND del_YN = 'N'
    </select>
    
    <!-- 회원&비회원 수량이 충분하다면 해당 갯수만큼 빼주기 -->
    <update id="MinusInventory" parameterType="CartVO">
    	UPDATE product
    	SET inventory = inventory - #{cart_count}
    	WHERE product_index = #{product_index}
    </update>
    
    <!-- 회원&비회원 다시 상품 채워놓기 -->
    <update id="plusInventory" parameterType="CartVO">
    	UPDATE product
    	SET inventory = inventory + #{cart_count}
    	WHERE product_index = #{product_index}  
    </update>
    
    <!-- 회원&비회원 상품 판매량 늘려주기 -->
    <update id="productQuantityUpdate" parameterType="OrderProductVO">
    	UPDATE product
    	SET quantity = quantity + #{order_quantity}
    	WHERE product_index = #{product_index}
    </update>
    
	<!-- 구매페이지에서 뿌려질 상품목록들(상품번호=갯수 의 경우) -->
	<select id="purchaseListCaseOne" resultType="CartVO" parameterType="list">
		SELECT
			brand,
			middleSort,
			thumbnail_image,
			product_name,
			COALESCE(sale_price, sale_price, origin_price) as origin_price,
			product_index
		FROM product
		<foreach collection="list" item="item" open="WHERE " separator=" OR ">
			product_index = #{item}
		</foreach>
	</select>
	
	<!-- 구매페이지에서 뿌려질 상품목록들(카트번호=값 의 경우) -->
	<select id="purchaseListCaseTwo" resultType="CartVO" parameterType="list">
		SELECT
			brand,
			middleSort,
			thumbnail_image,
			product_name,
			COALESCE(sale_price, sale_price, origin_price) as origin_price,
			a.product_index,
			b.cart_count
		FROM product as a, cart as b
		WHERE a.product_index = b.product_index AND 
		<foreach collection="list" item="item" open="(" separator=" OR " close=")">
			cart_index = #{item}
		</foreach>
		
	</select>
    
    <!-- *************************여기서 부터는 관리자페이지**************************** -->
    
    <!-- 상품 조회할때 먼저 총 글의 총 갯수를 구하는 쿼리  -->
    <select id="adminProductListCount" resultType="int" parameterType="SearchVO">
    	SELECT COUNT(*)
    	FROM product
    	WHERE del_YN = #{del_YN}
        <if test="searchValue != null">
        	AND product_name LIKE CONCAT('%',#{searchValue},'%')
        </if>
    </select>
    
    <!-- 상품 조회 -->
    <select id="adminProductList" resultType="ProductVO" parameterType="PagingUtil">
    	SELECT *
    	FROM product
    	WHERE del_YN = #{del_YN}
    	<if test="searchValue != null">
        	AND product_name LIKE CONCAT('%',#{searchValue},'%')
        </if>
    	ORDER BY product_date DESC
    	LIMIT #{start}, #{perPage}
    </select>
    
    <!-- 상품 삭제 -->
    <update id="adminProductDelYNisY" parameterType="list">
    	UPDATE product SET del_YN = "Y"
    	WHERE
		<foreach collection="list" item="item" separator=" OR ">
			product_index = #{item}
		</foreach>
    </update>
    
    <!-- 상품 상세 조회 -->
	<select id="adminProductSelectOne" resultType="ProductVO" parameterType="String">
    	SELECT *
    	FROM product
    	WHERE product_index = #{product_index}
    </select>
    
    <!-- 상품 등록&수정 전에 상품 번호를 조회하는 과정 -->
    <select id="adminProductIndexSelectList" resultType="String" parameterType="String">
    	SELECT product_index
    	FROM product
    	WHERE product_index LIKE CONCAT(#{productIndex},'%')
    	ORDER BY product_index
    </select>
    
    <!-- 상품 등록 -->
    <insert id="adminProductInsert" parameterType="ProductVO">
    	INSERT INTO product (
    		product_index, bigSort, middleSort, product_name,
    		origin_price,<if test="sale_price > -1"> sale_price,</if> brand, inventory,
    		delivery_free_YN, thumbnail_image, detail_image
    	)VALUES (
    		#{product_index}, #{bigSort}, #{middleSort}, #{product_name},
    		#{origin_price},<if test="sale_price > -1"> #{sale_price},</if> #{brand}, #{inventory},
    		#{delivery_free_YN}, #{thumbnail_image}, #{detail_image}
    	)
    </insert>
    
    <!-- 상품 수정 -->
    <update id="adminProductUpdate" parameterType="ProductVO">
    	UPDATE product SET
	    	product_index = #{product_index},
	    	bigSort = #{bigSort},
	    	middleSort = #{middleSort},
	    	product_name = #{product_name},
	    	origin_price = #{origin_price},
	    <if test="sale_price == -1">
	    	sale_price = null,
	    </if>
	    <if test="sale_price > -1">
	    	sale_price = #{sale_price},
	    </if>
	    	brand = #{brand},
	    	inventory = #{inventory},
	    <if test="thumbnail_image != ''">
	    	thumbnail_image = #{thumbnail_image},
	    </if>
	    <if test="detail_image != ''">
	    	detail_image = #{detail_image},
	    </if>
	    	delivery_free_YN = #{delivery_free_YN}
    	WHERE product_index = #{origin_product_index}
    </update>
    
</mapper>